local plrs,tele,core = game:GetService("Players"),game:GetService("TeleportService"),game:GetService("CoreGui")
local me,sock,running = plrs.LocalPlayer,nil,false
local done,tik = {},tick

for _, guy in pairs(plrs:GetPlayers()) do
    guy.CharacterAdded:Connect(function()
        guy:ClearCharacterAppearance()
    end)
    if guy.Character then guy:ClearCharacterAppearance() end
end
plrs.PlayerAdded:Connect(function(guy)
    if guy.Character then guy:ClearCharacterAppearance() end
    guy.CharacterAdded:Connect(function()
        guy:ClearCharacterAppearance()
    end)
end)

local screen = Instance.new("ScreenGui")
screen.Name="gon joner tufffffff"
screen.Parent=core
screen.ResetOnSpawn=false
local btn = Instance.new("TextButton")
btn.Size=UDim2.new(0,80,0,28)
btn.Position=UDim2.new(0.5,-40,0,8)
btn.BackgroundColor3=Color3.fromRGB(46,204,113)
btn.Text="gon joiner"
btn.TextColor3=Color3.new(1,1,1)
btn.TextScaled=true
btn.Font=Enum.Font.GothamBold
btn.Parent=screen
local corner = Instance.new("UICorner")
corner.CornerRadius=UDim.new(0,6)
corner.Parent=btn

local box,func,txtsig,blursig = nil,nil,nil,nil

local function grabstuff()
    if box and func and txtsig and blursig then return true end
    
    local ok1, gui = pcall(function() return core:FindFirstChild("ScreenGui") end)
    if ok1 and gui then
        local ok2, inputbox = pcall(function() 
            return gui.Base.Content.Elements.ElementsScrolling.Section.SectionContent.Input.InputBox 
        end)
        if ok2 and inputbox then
            box = inputbox
            txtsig = getconnections(box:GetPropertyChangedSignal("Text"))[1]
            blursig = getconnections(box.FocusLost)[1]
            
            local ok3, btnparent = pcall(function() 
                return gui.Base.Content.Elements.ElementsScrolling.Section.SectionContent:GetChildren()[5]
            end)
            if ok3 and btnparent then
                local ok4, clicker = pcall(function() return btnparent.ButtonInteract end)
                if ok4 and clicker then
                    func = getconnections(clicker.MouseButton1Click)[1].Function
                    return true
                end
            end
        end
    end
    
    return false
end

local function gojoin(id)
    local start = tik()
    local len = #id
    
    if len==36 and id:byte(9)==45 and id:byte(14)==45 and id:byte(19)==45 and id:byte(24)==45 then
        tele:TeleportToPlaceInstance(game.PlaceId, id, me)
        print(string.format("[gon joiner] direct %.6fs", tik() - start))
    else
        if grabstuff() then
            box.Text = id
            txtsig:Fire()
            blursig:Fire()
            func()
            print(string.format("[gon joiner] ui %.6fs", tik() - start))
        else
            tele:TeleportToPlaceInstance(game.PlaceId, id, me)
        end
    end
end

local function onmsg(msg)
    if msg:find("TeleportService") then
        if not done[msg] then
            done[msg] = true
            local code = loadstring(msg)
            if code then pcall(code) end
        end
        return
    end
    
    local id = msg:gsub("%s+","")
    if id=="" or done[id] then return end
    done[id] = true
    
    gojoin(id)
end

local function tryconnect()
    while running do
        print("[gon joiner] Connecting to ws://127.0.0.1:1488/")
        local ok,ws = pcall(WebSocket.connect,"ws://127.0.0.1:1488/")
        if ok and ws then
            sock = ws
            print("[gon joiner] Connected")
            ws.OnMessage:Connect(function(m) if running then onmsg(m) end end)
            ws.OnClose:Connect(function() 
                if running then 
                    print("[gon joiner] Disconnected, reconnecting...")
                    tryconnect() 
                end 
            end)
            return
        end
        task.wait(1)
    end
end

btn.MouseButton1Click:Connect(function()
    running = not running
    btn.BackgroundColor3 = running and Color3.fromRGB(231,76,60) or Color3.fromRGB(46,204,113)
    
    if running then
        grabstuff()
        tryconnect()
    else
        if sock then pcall(sock.Close,sock) end
        sock,box,func,txtsig,blursig = nil,nil,nil,nil,nil
        done = {}
    end
end)
